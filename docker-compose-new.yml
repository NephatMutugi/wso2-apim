# Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: '3.7'

networks:
  nginx:
    external: false

volumes:
  wso2_logs:

services:

  # --- api gateway ----
  apimanager:
      image: docker-common-svc.apps.ocp4-kawe.tz.af.absa.local/apim-build:latest
      container_name: apimanager
      environment:
        - PROFILE_NAME=gateway-worker
      volumes:
        - wso2_logs:/home/wso2carbon/wso2am-4.2.0/repository/logs
      ports:
        - "8243:8243"
      deploy:
        replicas: 1
        placement:
          constraints:
            - node.labels.contianer == wso2
        restart_policy:
          max_attempts: 3
          condition: on-failure       
        update_config:
          parallelism: 3
          delay: 10s
      networks:
        - nginx

  # --- filebeat ---
  filebeat:
      depends_on:
        - apimanager
      image: docker-common-svc.apps.ocp4-kawe.tz.af.absa.local/filebeat-build:latest
      container_name: filebeat
      volumes:
        - wso2_logs:/usr/share/filebeat/wso2-logs/
      deploy:
        replicas: 1
        placement:
          constraints:
            - node.labels.contianer == wso2
      networks:
        - nginx

  # --- NGINX ---
  nginx:
      image: docker-common-svc.apps.ocp4-kawe.tz.af.absa.local/nginx-build:latest
      ports:
        - '80:80'
        - '443:443'
      deploy:
        replicas: 1
        placement:
          constraints:
            - node.labels.contianer == nginx
        update_config:
          parallelism: 2
          order: start-first
          failure_action: rollback
          delay: 10s
        rollback_config:
          parallelism: 0
          order: stop-first
        restart_policy:
          condition: any
          delay: 5s
          max_attempts: 3
          window: 120s
      healthcheck:
        test: ["CMD", "service", "nginx", "status"]
      networks:
        - nginx
